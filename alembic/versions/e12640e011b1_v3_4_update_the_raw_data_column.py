"""V3.4 Update the Raw data Column

Revision ID: e12640e011b1
Revises: da2f24cdc817
Create Date: 2024-06-25 12:52:24.301807

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e12640e011b1'
down_revision: Union[str, None] = 'da2f24cdc817'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sales', sa.Column('battery_run_count', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('bike_run_count', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('battery_kilometer_run', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('bike_kilometer_run', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('co2_emission', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('total_rider', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('total_orders', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('average_rider_count', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('total_vehicle', sa.Integer(), nullable=True))
    op.add_column('sales', sa.Column('active_vehicle', sa.Integer(), nullable=True))
    op.drop_column('sales', 'active_vehicles')
    op.add_column('weekly_raw_data', sa.Column('SALARY_DAY', sa.String(), nullable=True))
    op.add_column('weekly_raw_data', sa.Column('EXIT_DATE', sa.Date(), nullable=True))
    op.add_column('weekly_raw_data', sa.Column('DESIGNATION_NAME', sa.String(), nullable=True))
    op.drop_column('weekly_raw_data', 'WORK_TYPE')
    op.drop_column('weekly_raw_data', 'SALARY_DATE')
    op.add_column('weekly_salary_data', sa.Column('EXIT_DATE', sa.Date(), nullable=True))
    op.add_column('weekly_salary_data', sa.Column('DESIGNATION_NAME', sa.String(), nullable=True))
    op.drop_column('weekly_salary_data', 'WORK_TYPE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('weekly_salary_data', sa.Column('WORK_TYPE', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('weekly_salary_data', 'DESIGNATION_NAME')
    op.drop_column('weekly_salary_data', 'EXIT_DATE')
    op.add_column('weekly_raw_data', sa.Column('SALARY_DATE', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('weekly_raw_data', sa.Column('WORK_TYPE', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('weekly_raw_data', 'DESIGNATION_NAME')
    op.drop_column('weekly_raw_data', 'EXIT_DATE')
    op.drop_column('weekly_raw_data', 'SALARY_DAY')
    op.add_column('sales', sa.Column('active_vehicles', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('sales', 'active_vehicle')
    op.drop_column('sales', 'total_vehicle')
    op.drop_column('sales', 'average_rider_count')
    op.drop_column('sales', 'total_orders')
    op.drop_column('sales', 'total_rider')
    op.drop_column('sales', 'co2_emission')
    op.drop_column('sales', 'bike_kilometer_run')
    op.drop_column('sales', 'battery_kilometer_run')
    op.drop_column('sales', 'bike_run_count')
    op.drop_column('sales', 'battery_run_count')
    # ### end Alembic commands ###
